<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-08-01T14:20:10+08:00</updated><id>http://localhost:4000/</id><title type="html">逆行云</title><subtitle>世界上有10种人, 一种是懂二进制的人, 一种是不懂二进制的人.
</subtitle><entry><title type="html">逆行云的blog</title><link href="http://localhost:4000/jekyll/update/2017/08/01/welcome-to-jekyll1.html" rel="alternate" type="text/html" title="逆行云的blog" /><published>2017-08-01T10:17:31+08:00</published><updated>2017-08-01T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/08/01/welcome-to-jekyll1</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/08/01/welcome-to-jekyll1.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">使用RunTime清空单例对象属性值</title><link href="http://localhost:4000/jekyll/update/2017/07/29/%E4%BD%BF%E7%94%A8RunTime%E6%B8%85%E7%A9%BA%E5%8D%95%E4%BE%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E5%80%BC.html" rel="alternate" type="text/html" title="使用RunTime清空单例对象属性值" /><published>2017-07-29T10:54:31+08:00</published><updated>2017-07-29T10:54:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/07/29/%E4%BD%BF%E7%94%A8RunTime%E6%B8%85%E7%A9%BA%E5%8D%95%E4%BE%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E5%80%BC</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/07/29/%E4%BD%BF%E7%94%A8RunTime%E6%B8%85%E7%A9%BA%E5%8D%95%E4%BE%8B%E5%AF%B9%E8%B1%A1%E5%B1%9E%E6%80%A7%E5%80%BC.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-36673d2ce46bbead.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;来自项目截图&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;功能介绍&quot;&gt;功能介绍&lt;/h3&gt;
&lt;p&gt;最近在做【电站接入】功能, 这个功能分为五个步骤前四个步骤分别让用户录入信息, 但是提交数据在最后一步执行.&lt;/p&gt;

&lt;h3 id=&quot;功能实现&quot;&gt;功能实现&lt;/h3&gt;
&lt;p&gt;新建一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt;模型, 使用单例模式设计; 把用户输入的信息都记录在该&lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt;中, 提交数据时, 只需要利用&lt;code class=&quot;highlighter-rouge&quot;&gt;MJExtension&lt;/code&gt; 中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;mj_keyValues&lt;/code&gt; 方法把模型转成字典, 提交给后台即可.&lt;/p&gt;

&lt;h3 id=&quot;问题&quot;&gt;问题&lt;/h3&gt;
&lt;p&gt;当退出【电站接入】流程时, 因为模型为单例, 所以模型数据一直存在, 再次进入该流程时, 会把之前用户录入的信息重新填充到表单中. 项目需求是, 退出流程再次进入时应该是一个新的流程, 不用保存上次录入的信息.&lt;/p&gt;

&lt;h3 id=&quot;问题分析&quot;&gt;问题分析&lt;/h3&gt;
&lt;p&gt;因为模型数据为单例, 存在于整个应用程序的生命周期; 如果手动把单例对象置空, 则此次应用程序生命周期期间, 不会再重新创建该模型数据对象. 因此只能对模型对象的属性值置空.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 清空属性值
 */
- (void)clearPropertyValue {
    self.latitude = nil;
    self.longitude = nil;
    self.moble_tel = nil;
    self.moble_tel_bak = nil;

    .....
    ...........此处略去20行.......
    .....

    self.org_index_code = nil;
    self.ps_id = nil;
    self.ps_location = nil;
    self.ps_name = nil;
    self.ps_type = nil;
    self.timezone = nil;
    self.time_zone_id = nil;
    self.ps_type_name = nil;
    self.safe_start_date = nil;
    self.set_user_org = nil;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果对每个属性都单独置空, 扩展性很差, 每次增加一个属性, 都需要在&lt;code class=&quot;highlighter-rouge&quot;&gt;clearPropertyValue&lt;/code&gt;中加入一行代码, 而且不利于后期维护.&lt;/p&gt;

&lt;h3 id=&quot;优化解决方案&quot;&gt;优化解决方案&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;RunTime&lt;/code&gt;获取到该类的所有属性名称, 然后使用&lt;code class=&quot;highlighter-rouge&quot;&gt;KVC&lt;/code&gt; 对属性进行置空&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 清空属性值
 */
- (void)clearPropertyValue {
    // 置空自身的属性值
    unsigned int pro_count = 0;
    objc_property_t *properties = class_copyPropertyList([self class], &amp;amp;pro_count);
    for (int i = 0; i &amp;lt; pro_count; i ++) {
        objc_property_t property = properties[i];
        NSString *propertyName = [NSString stringWithFormat:@&quot;%s&quot;, property_getName(property)];
        [self setValue:nil forKey:propertyName];
    }
    free(properties);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;因为在我们项目中该模型使用了继承, 因此还需要清空父类的属性值&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 清空属性值
 */
- (void)clearPropertyValue {
    // 置空自身的属性值
    unsigned int pro_count = 0;
    objc_property_t *properties = class_copyPropertyList([self class], &amp;amp;pro_count);
    for (int i = 0; i &amp;lt; pro_count; i ++) {
        objc_property_t property = properties[i];
        NSString *propertyName = [NSString stringWithFormat:@&quot;%s&quot;, property_getName(property)];
        [self setValue:nil forKey:propertyName];
    }
    free(properties);
    
    // 置空父类(PowerStationForHouseholdModel)的属性值
    pro_count = 0;
    objc_property_t *properties_super = class_copyPropertyList([self superclass], &amp;amp;pro_count);
    for (int i = 0; i &amp;lt; pro_count; i ++) {
        objc_property_t property = properties_super[i];
        NSString *propertyName = [NSString stringWithFormat:@&quot;%s&quot;, property_getName(property)];
        [self setValue:nil forKey:propertyName];
    }
    free(properties_super);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;需要注意的地方&quot;&gt;需要注意的地方&lt;/h3&gt;
&lt;p&gt;由于模型中有些属性声明的是&lt;code class=&quot;highlighter-rouge&quot;&gt;readonly&lt;/code&gt;, 使用&lt;code class=&quot;highlighter-rouge&quot;&gt;KVC&lt;/code&gt;时会导致找不到对应的&lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt;,发生crash. 因此还需要重写&lt;code class=&quot;highlighter-rouge&quot;&gt;setValue: forUndefinedKey:&lt;/code&gt;方法&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)setValue:(id)value forUndefinedKey:(NSString *)key {
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;补充&quot;&gt;补充&lt;/h3&gt;
&lt;p&gt;获取使用&lt;code class=&quot;highlighter-rouge&quot;&gt;RunTime&lt;/code&gt;获取成员变量&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unsigned int count = 0;
    Ivar *ivars = class_copyIvarList([self class], &amp;amp;count);
    for (int i = 0; i &amp;lt; count; i ++) {
        Ivar ivar = *(ivars + i);
        NSLog(@&quot;成员变量&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;(%s)&quot;, ivar_getName(ivar));
    }
    free(ivars);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">UIBezierPath + CAShapeLayer 实战应用</title><link href="http://localhost:4000/jekyll/update/2017/07/12/UIBezierPath-+-CAShapeLayer-%E5%AE%9E%E6%88%98%E5%BA%94%E7%94%A8.html" rel="alternate" type="text/html" title="UIBezierPath + CAShapeLayer 实战应用" /><published>2017-07-12T10:17:31+08:00</published><updated>2017-07-12T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/07/12/UIBezierPath%20+%20CAShapeLayer%20%E5%AE%9E%E6%88%98%E5%BA%94%E7%94%A8</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/07/12/UIBezierPath-+-CAShapeLayer-%E5%AE%9E%E6%88%98%E5%BA%94%E7%94%A8.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-e19704ddc2fece86.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;时效截图&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;2017724更新&quot;&gt;2017.7.24更新&lt;/h1&gt;
&lt;h4 id=&quot;1-虚线方法多次调用会重复绘制&quot;&gt;1. 虚线方法多次调用会重复绘制&lt;/h4&gt;
&lt;p&gt;解决办法: 使用runtime给类目增加一个属性数组保存绘制的虚线; 在绘制之前移除上一个虚线&lt;code class=&quot;highlighter-rouge&quot;&gt;layer&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)addLineOfDashWithRect:(CGRect)rect lineHeight: (CGFloat)lineHeight lineWidth:(CGFloat)lineWidth lineSpacing:(CGFloat)lineSpacing lineColor:(UIColor *)lineColor lineDirection:(BOOL)isHorizonal {
    if (![self lineOfDashArray]) {
        [self setLineOfDashArray:[NSMutableArray array]];
    }
    NSMutableArray *lineOfDashs = [self lineOfDashArray];
    [lineOfDashs enumerateObjectsUsingBlock:^(CALayer *obj, NSUInteger idx, BOOL * _Nonnull stop) {
        [obj removeFromSuperlayer];
    }];
    CAShapeLayer *shapeLayer = [CAShapeLayer layer];
    [shapeLayer setBounds:self.bounds];
    [shapeLayer setPosition:CGPointMake(CGRectGetWidth(self.frame) * 0.5 + CGRectGetMinX(rect), CGRectGetHeight(self.frame) * 0.5 + CGRectGetMinY(rect))];
    [shapeLayer setFillColor:[UIColor clearColor].CGColor];
    //  设置虚线颜色为blackColor
    [shapeLayer setStrokeColor:lineColor.CGColor];
    //  设置虚线高度
    [shapeLayer setLineWidth:lineHeight];
    [shapeLayer setLineJoin:kCALineJoinRound];
    //  设置线宽，线间距
    [shapeLayer setLineDashPattern:[NSArray arrayWithObjects:[NSNumber numberWithInt:lineWidth], [NSNumber numberWithInt:lineSpacing], nil]];
    //  设置路径
    CGMutablePathRef path = CGPathCreateMutable();
    CGPathMoveToPoint(path, NULL, 0, 0);
    
    if (isHorizonal) {
        CGPathAddLineToPoint(path, NULL,CGRectGetWidth(rect), 0);
    } else {
        CGPathAddLineToPoint(path, NULL, 0, CGRectGetHeight(rect));
    }
    [shapeLayer setPath:path];
    [lineOfDashs addObject:shapeLayer];
    CGPathRelease(path);
    //  把绘制好的虚线添加上来
    [self.layer addSublayer:shapeLayer];
}

- (void)setLineOfDashArray:(NSMutableArray *)lineOfDashArray {
    objc_setAssociatedObject(self, &amp;amp;LineOfDashArrayKey, lineOfDashArray, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
}

- (NSMutableArray *)lineOfDashArray {
    return objc_getAssociatedObject(self, &amp;amp;LineOfDashArrayKey);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2-给顶部进度视图完成的部分扩展点击事件以及增加选中已完成部分的标识&quot;&gt;2. 给顶部进度视图完成的部分扩展点击事件以及增加选中已完成部分的标识&lt;/h4&gt;
&lt;h6 id=&quot;代码地址&quot;&gt;&lt;a href=&quot;https://github.com/YQqiang/ProgressTopBar&quot;&gt;代码地址&lt;/a&gt;&lt;/h6&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;测试阶段完成, 后面进入新功能的迭代;
[电站接入]功能的重新设计, 部分效果如上图所示.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;经过对效果图的分析, 决定先把能够复用的部分封装起来&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;顶部代表当前进度的视图, 使用贝塞尔曲线绘制&lt;/li&gt;
  &lt;li&gt;视图左右两边的圆弧也使用贝塞尔曲线绘制, 并封装成类目方法&lt;/li&gt;
  &lt;li&gt;绘制虚线&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-075e95e59f4e1d55.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;任务1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-34a7a85cecb3828b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;任务2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-480f86074b2df2e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;任务3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;代码实现&quot;&gt;代码实现&lt;/h2&gt;
&lt;h4 id=&quot;1顶部代表进度的视图&quot;&gt;1.顶部代表进度的视图&lt;/h4&gt;
&lt;p&gt;1.1 视图分解
顶部视图可以看成是由5个item组成, 只需要绘制出一个item, 然后再基于该item进行二次封装即可
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-16ffffa409dcf65a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;分解顶部视图&quot; /&gt;
1.2 绘制单个item
&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-dd1f37a3da101fd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;分解单个item&quot; /&gt;
绘制思路: 
① :    使用贝塞尔曲线绘制部分圆弧;
②③ :使用二次贝塞尔曲线绘制圆弧
④ :    使用贝塞尔曲线路径绘制对勾
⑤ :   使用CAGradientLayer实现颜色渐变
绘制代码如下:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)createUI {
    self.backgroundColor = [UIColor whiteColor];
    CGFloat space = 4;
    CGFloat lineHeight = 3;
    CGFloat width = CGRectGetWidth(self.frame);
    CGFloat radius = (width - 2 * space) * 0.16;
    CGFloat controlPointY = 3.3;
    CGFloat startAngle = M_PI * 0.2;
    CGFloat endAngle = M_PI - startAngle;
    
    UIColor *doneColor = RGB(0, 158, 238);
    UIColor *doingColor = RGB(247, 141, 97);
    //    UIColor *lightDoneColor = RGB(105, 153, 171);
    UIColor *lightDoingColor = RGB(184, 147, 127);
    UIColor *unDoColor = RGB(212, 213, 214);
    
    UIColor *overalColor = doneColor;
    UIColor *leadingGradientColor = nil;
    UIColor *trailingGradientColor = nil;
    
    switch (self.processState) {
        case UnProcessState:
            overalColor = unDoColor;
            break;
        case UnProcessRightRornerRadiusState:
            overalColor = unDoColor;
            break;
        case ProcessingLeading:
            overalColor = doingColor;
            leadingGradientColor = doingColor;
            trailingGradientColor = unDoColor;
            break;
        case ProcessingMiddle:
            overalColor = doingColor;
            leadingGradientColor = lightDoingColor;
            trailingGradientColor = unDoColor;
            break;
        case ProcessingTrialing:
            overalColor = doingColor;
            break;
        case ProcessFirtDone:
            overalColor = doneColor;
            trailingGradientColor = lightDoingColor;
            break;
        case ProcessedLeading:
            overalColor = doneColor;
            break;
        case ProcessedMiddle:
            overalColor = doneColor;
            break;
        case ProcessedTrialing:
            overalColor = doneColor;
            trailingGradientColor = lightDoingColor;
            break;
        case ProcessFirtDoing:
            overalColor = doingColor;
            trailingGradientColor = unDoColor;
            break;
        case ProcessLastDone:
            overalColor = doingColor;
            leadingGradientColor = lightDoingColor;
            break;
        default:
            break;
    }
    // 路径
    UIBezierPath *path = [UIBezierPath bezierPathWithArcCenter:CGPointMake(width * 0.5, lineHeight) radius: radius startAngle:startAngle endAngle:endAngle clockwise:YES];
    [path addQuadCurveToPoint:CGPointMake((width - 2 * space) * 0.185 + space, lineHeight) controlPoint:CGPointMake(width * 0.3, controlPointY)];
    // 左圆角
    if (self.processState == ProcessFirtDoing || self.processState == ProcessedLeading || self.processState == ProcessFirtDone) {
        [path addLineToPoint:CGPointMake(space, lineHeight)];
        [path addQuadCurveToPoint:CGPointMake(space, 0) controlPoint:CGPointMake(0 - space, lineHeight * 0.5)];
    } else {
        [path addLineToPoint:CGPointMake(0, lineHeight)];
        [path addLineToPoint:CGPointMake(0, 0)];
    }
    // 右圆角
    if (self.processState == ProcessLastDone || self.processState == UnProcessRightRornerRadiusState) {
        [path addLineToPoint:CGPointMake(width - space, 0)];
        [path addQuadCurveToPoint:CGPointMake(width - space, lineHeight) controlPoint:CGPointMake(width + space, lineHeight * 0.5)];
    } else {
        [path addLineToPoint:CGPointMake(width - 0, 0)];
        [path addLineToPoint:CGPointMake(width - 0, lineHeight)];
    }
    [path addLineToPoint:CGPointMake( width - (width - 2 * space) * 0.185 - space, lineHeight)];
    double endX = cos(startAngle) * radius + (width * 0.5);
    double endY = sin(startAngle) * radius + lineHeight;
    [path addQuadCurveToPoint:CGPointMake(endX, endY) controlPoint:CGPointMake(width * 0.7, controlPointY)];
//    path.lineWidth = 10;
    // 绘制路径图层
    CAShapeLayer *backLayer = [CAShapeLayer layer];
    backLayer.frame = self.bounds;
    backLayer.fillColor =  overalColor.CGColor;
    backLayer.strokeColor  = overalColor.CGColor;
//    backLayer.lineWidth = 2;
    backLayer.lineCap = @&quot;round&quot;;
    backLayer.lineJoin = @&quot;round&quot;;
    backLayer.path = [path CGPath];
//    backLayer.strokeEnd = 5;
    [self.layer addSublayer:backLayer];
    
    // 颜色渐变
    CAGradientLayer *gradientLayer =  [CAGradientLayer layer];
    gradientLayer.frame = self.bounds;
    NSMutableArray *colors = [NSMutableArray array];
    [colors addObject:(id)overalColor.CGColor];
    if (trailingGradientColor) {
        [colors addObject:(id)trailingGradientColor.CGColor];
    } else {
        [colors addObject:(id)overalColor.CGColor];
    }
    if (leadingGradientColor) {
        [colors insertObject:(id)leadingGradientColor.CGColor atIndex:0];
    }
    
    [gradientLayer setColors:colors];
    gradientLayer.startPoint = CGPointMake(0, 0);
    gradientLayer.endPoint = CGPointMake(1, 0);
    if (colors.count == 2) {
        gradientLayer.locations = @[@0.7];
    } else if (colors.count == 3) {
        gradientLayer.locations = @[@0, @0.5];
    }
    [self.layer addSublayer:gradientLayer];
    [gradientLayer setMask:backLayer];
    
    // 黄色圆圈(标识正在处理)
    if (self.processState == ProcessingTrialing || self.processState == ProcessingMiddle || self.processState == ProcessingLeading || self.processState == ProcessLastDone || self.processState == ProcessFirtDoing) {
        CGFloat cycleRadius = 3;
        UIView *cycleView = [[UIView alloc] init];
        cycleView.backgroundColor = RGB(247, 141, 97);
        [self addSubview:cycleView];
        cycleView.frame = CGRectMake(width * 0.5 - cycleRadius, lineHeight + radius + cycleRadius, cycleRadius * 2, cycleRadius * 2);
        cycleView.layer.cornerRadius = cycleRadius;
    }
    
    self.titleBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.titleBtn.titleLabel.font = [UIFont systemFontOfSize:8];
    [self addSubview:self.titleBtn];
    [self.titleBtn sizeToFit];
    CGPoint titleBtnCenter = self.titleBtn.center;
    titleBtnCenter.x = self.center.x - 5;
    titleBtnCenter.y = lineHeight + 5;
    self.titleBtn.center = CGPointMake(width * 0.5, lineHeight + 3);
    if (self.processState == ProcessedLeading || self.processState == ProcessedMiddle || self.processState == ProcessedTrialing || self.processState == ProcessLastDone) {
        // 已完成的步骤显示√
        UIBezierPath *gouPath = [UIBezierPath bezierPath];
        [gouPath moveToPoint:CGPointMake(12, CGRectGetHeight(self.titleBtn.frame) * 0.5 + 0)];
        [gouPath addLineToPoint:CGPointMake(CGRectGetWidth(self.titleBtn.frame) * 0.5, CGRectGetHeight(self.titleBtn.frame) - 8)];
        [gouPath addLineToPoint:CGPointMake(CGRectGetWidth(self.titleBtn.frame) - 10, 8)];
        CAShapeLayer *gouLayer = [CAShapeLayer layer];
        gouLayer.path = gouPath.CGPath;
        gouLayer.frame = self.titleBtn.bounds;
        gouLayer.lineWidth = 1.5;
        gouLayer.lineCap = @&quot;round&quot;;
        gouLayer.lineJoin = @&quot;round&quot;;
        gouLayer.fillColor = [UIColor clearColor].CGColor;
        gouLayer.strokeColor = [UIColor whiteColor].CGColor;
        [self.titleBtn.layer addSublayer:gouLayer];
        
    } else {
        [self.titleBtn setTitle:self.processValue forState:UIControlStateNormal];
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;1.3 基于单个item二次封装
代码如下:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)creatUI {
    CGFloat itemWidth = CGRectGetWidth(self.frame) * 0.2;
    CGFloat itemHeight = CGRectGetHeight(self.frame);
    ProcessState processState = ProcessedLeading;
    for (int i = 0; i &amp;lt; 5; i ++) {
        if (i == self.progressValueType - 1) {
            processState = ProcessedTrialing;
        } else if (i &amp;lt; self.progressValueType) {
            processState = ProcessedMiddle;
        } else if (i == self.progressValueType) {
            processState = ProcessingMiddle;
        } else {
            processState = UnProcessState;
        }
        
        if (i == 0 &amp;amp;&amp;amp; self.progressValueType != ProgressTypeWith40) {
            processState = ProcessedLeading;
        }
        if (i == 0 &amp;amp;&amp;amp; self.progressValueType == ProgressTypeWith40) {
            processState = ProcessFirtDone;
        }
        if (i == 4) {
            processState = UnProcessRightRornerRadiusState;
        }
        
        if (self.progressValueType == ProgressTypeWith20 &amp;amp;&amp;amp; i == 0) {
            processState = ProcessFirtDoing;
        }
        if (self.progressValueType == ProgressTypeWith100 &amp;amp;&amp;amp; i == 4) {
            processState = ProcessLastDone;
        }
        CreatePlantProgressItme *item = [[CreatePlantProgressItme alloc] initWithFrame:CGRectMake(i * itemWidth, 0, itemWidth, itemHeight) processState:processState processValue:[NSString stringWithFormat:@&quot;%zd%%&quot;, (i + 1) * 20]];
        [self addSubview:item];
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;1.4 最终效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-796cf479478aa0c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;效果&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1.5 demo地址 &lt;a href=&quot;https://github.com/YQqiang/ProgressTopBar&quot;&gt;ProgressTopBar&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;2视图左右增加圆弧&quot;&gt;2.视图左右增加圆弧&lt;/h4&gt;
&lt;p&gt;2.1 直接上代码:(在UIView类目中添加该方法)&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 视图View两边增加圆弧
 
 @param topMargin 距离顶部距离
 @param gapRadius 圆弧大小
 */
- (void)addGapTopMargin:(CGFloat)topMargin gapRadius:(CGFloat)gapRadius {
    UIBezierPath *path = [UIBezierPath bezierPathWithRect:self.bounds];
    UIBezierPath *path1 = [UIBezierPath bezierPath];
    CGFloat gapY = topMargin;
    [path1 moveToPoint:CGPointMake(0, gapY)];
    [path1 addQuadCurveToPoint:CGPointMake(gapRadius, gapY + gapRadius * 1.5) controlPoint:CGPointMake(0, gapY + gapRadius * 1)];
    [path1 addQuadCurveToPoint:CGPointMake(gapRadius, gapY + gapRadius * 3.5) controlPoint:CGPointMake(gapRadius * 2, gapY + gapRadius * 2.5)];
    [path1 addQuadCurveToPoint:CGPointMake(0, gapY + gapRadius * 5) controlPoint:CGPointMake(0, gapY + gapRadius * 4)];
    [path1 fill];
    
    UIBezierPath *path2 = [UIBezierPath bezierPathWithCGPath:path1.CGPath];
    [path2 applyTransform:CGAffineTransformMakeRotation(M_PI)];
    [path2 applyTransform:CGAffineTransformMakeTranslation(CGRectGetWidth(self.frame), topMargin * 2 + 5 * gapRadius)];
    [path appendPath:[path1 bezierPathByReversingPath]];
    [path appendPath:[path2 bezierPathByReversingPath]];
    
    CAShapeLayer *shapeLayer = [CAShapeLayer layer];
    shapeLayer.path = path.CGPath;
    [self.layer setMask:shapeLayer];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2.2 如何使用:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[self.bgView addGapTopMargin:84 gapRadius:8];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2.3 最终效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-28a1910f81a0e2e2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;弧度为5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-bbf5fb297e36f440.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;弧度为8&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;3-绘制虚线&quot;&gt;3. 绘制虚线&lt;/h4&gt;
&lt;p&gt;3.1 同样在UIView类目中添加该方法:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 绘制虚线
 
 @param rect 虚线尺寸
 @param lineHeight 虚线的高度
 @param lineWidth 虚线的宽度
 @param lineSpacing 虚线的间距
 @param lineColor 虚线的颜色
 @param isHorizonal 水平 | 垂直  (YES 水平; NO 垂直)
 */
- (void)addLineOfDashWithRect:(CGRect)rect lineHeight: (CGFloat)lineHeight lineWidth:(CGFloat)lineWidth lineSpacing:(CGFloat)lineSpacing lineColor:(UIColor *)lineColor lineDirection:(BOOL)isHorizonal {
    
    CAShapeLayer *shapeLayer = [CAShapeLayer layer];
    [shapeLayer setBounds:self.bounds];
    [shapeLayer setPosition:CGPointMake(CGRectGetWidth(self.frame) * 0.5 + CGRectGetMinX(rect), CGRectGetHeight(self.frame) * 0.5 + CGRectGetMinY(rect))];
    [shapeLayer setFillColor:[UIColor clearColor].CGColor];
    //  设置虚线颜色为blackColor
    [shapeLayer setStrokeColor:lineColor.CGColor];
    //  设置虚线高度
    [shapeLayer setLineWidth:lineHeight];
    [shapeLayer setLineJoin:kCALineJoinRound];
    //  设置线宽，线间距
    [shapeLayer setLineDashPattern:[NSArray arrayWithObjects:[NSNumber numberWithInt:lineWidth], [NSNumber numberWithInt:lineSpacing], nil]];
    //  设置路径
    CGMutablePathRef path = CGPathCreateMutable();
    CGPathMoveToPoint(path, NULL, 0, 0);
    
    if (isHorizonal) {
        CGPathAddLineToPoint(path, NULL,CGRectGetWidth(rect), 0);
    } else {
        CGPathAddLineToPoint(path, NULL, 0, CGRectGetHeight(rect));
    }
    [shapeLayer setPath:path];
    CGPathRelease(path);
    //  把绘制好的虚线添加上来
    [self.layer addSublayer:shapeLayer];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;3.2 使用方法&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//    [self.bgView addLineOfDashWithRect:CGRectMake(0, 150, self.bgView.bounds.size.width, 2) lineHeight:2 lineWidth:8 lineSpacing:5 lineColor:[UIColor redColor] lineDirection:YES];
    [self.bgView addLineOfDashWithRect:CGRectMake(self.bgView.bounds.size.width * 0.5, 0, 2, self.bgView.bounds.size.height) lineHeight:2 lineWidth:8 lineSpacing:5 lineColor:[UIColor redColor] lineDirection:NO];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;3.3 虚线效果&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-059f2bfd39c9ab6b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;水平虚线&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-1460d5ee43ab9f96.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;竖直虚线&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;颜色渐变&lt;code class=&quot;highlighter-rouge&quot;&gt;CAGradientLayer&lt;/code&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CAGradientLayer *gradientLayer =  [CAGradientLayer layer];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;贝塞尔路径的copy(由path1 复制出 path2)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UIBezierPath *path2 = [UIBezierPath bezierPathWithCGPath:path1.CGPath];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;贝塞尔路径的变换操作(平移, 旋转, 缩放)
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[path2 applyTransform:CGAffineTransformMakeRotation(M_PI)];
[path2 applyTransform:CGAffineTransformMakeTranslation(CGRectGetWidth(self.frame), topMargin * 2 + 5 * gapRadius)];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;裁剪贝塞尔曲线填充的部分
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[path appendPath:[path1 bezierPathByReversingPath]];
[path appendPath:[path2 bezierPathByReversingPath]];
    
 CAShapeLayer *shapeLayer = [CAShapeLayer layer];
 shapeLayer.path = path.CGPath;
 [self.layer setMask:shapeLayer];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;设置虚线
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; //  设置线宽，线间距
 [shapeLayer setLineDashPattern:[NSArray arrayWithObjects:[NSNumber numberWithInt:lineWidth], [NSNumber numberWithInt:lineSpacing], nil]];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CALayer 层的动画暂停与恢复&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; /**
  暂停layer层的动画
     
  @param layer
  */
 -(void)pauseLayer:(CALayer*)layer {
     if (layer.speed == 0) return;
     CFTimeInterval pausedTime = [layer convertTime:CACurrentMediaTime() fromLayer:nil];
     layer.speed = 0.0;
     layer.timeOffset = pausedTime;
 }
 /**
  恢复layer层的动画
     
  @param layer
  */
 -(void)resumeLayer:(CALayer*)layer {
     if (layer.speed != 0) return;
     CFTimeInterval pausedTime = [layer timeOffset];
     layer.speed = 1.0;
     layer.timeOffset = 0.0;
     layer.beginTime = 0.0;
     CFTimeInterval timeSincePause = [layer convertTime:CACurrentMediaTime() fromLayer:nil] - pausedTime;
     layer.beginTime = timeSincePause;
 }
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-c6db3cdb842391ed.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;pauseAnimation.gif&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">项目维护«模糊搜索控件封装»</title><link href="http://localhost:4000/jekyll/update/2017/06/20/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2%E6%8E%A7%E4%BB%B6%E5%B0%81%E8%A3%85.html" rel="alternate" type="text/html" title="项目维护&lt;&lt;模糊搜索控件封装&gt;&gt;" /><published>2017-06-20T10:17:31+08:00</published><updated>2017-06-20T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/06/20/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4%3C%3C%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2%E6%8E%A7%E4%BB%B6%E5%B0%81%E8%A3%85%3E%3E</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/06/20/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E6%A8%A1%E7%B3%8A%E6%90%9C%E7%B4%A2%E6%8E%A7%E4%BB%B6%E5%B0%81%E8%A3%85.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-2cbd3c688b66833c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;来自项目截图&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;接手项目中的选择控件是iOS系统风格的&lt;code class=&quot;highlighter-rouge&quot;&gt;pickView&lt;/code&gt;, 但是当数据源个数超过十几个时, &lt;code class=&quot;highlighter-rouge&quot;&gt;pickView&lt;/code&gt;用起来就不是很方便了, 需要来回滚动找到需要的那条数据.
于是就撸了一个简单的支持搜索的菜单选择控件.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;控件下载地址&lt;a href=&quot;https://github.com/YQqiang/YQFuzzySearchView&quot;&gt;YQFuzzySearchView&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;demo演示&quot;&gt;Demo演示&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-b503f4d6a82e6352.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;模糊搜索演示.gif&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;如何使用&quot;&gt;如何使用&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SearchTableView *searchTableView = [[SearchTableView alloc] initWithTitle:@&quot;测试搜索标题&quot; dataSource:arr currentSelectIndex:self.selectIndex];
[searchTableView setSelectResultBlock:^(NSInteger index){
}];
[self presentViewController:searchTableView animated:YES completion:nil];
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;初始化&lt;code class=&quot;highlighter-rouge&quot;&gt;SearchTableView&lt;/code&gt;时, 可以传入标题, 数据源, 当前选中的下标等参数.&lt;/li&gt;
  &lt;li&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;selectResultBlock&lt;/code&gt;获取选中的下标&lt;/li&gt;
  &lt;li&gt;控件显示使用的是控制器+转场动画的方式,因此只需要&lt;code class=&quot;highlighter-rouge&quot;&gt;presentViewController&lt;/code&gt;即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;实现原理&quot;&gt;实现原理&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)textFieldShouldChange:(UITextField *)textField {
    if (textField.text.length &amp;lt;= 0) {
        self.dataSource = self.originDataSource;
    } else {
        NSPredicate *pred = [NSPredicate predicateWithFormat:@&quot;SELF CONTAINS[cd] %@&quot;,textField.text];
        self.dataSource = [self.originDataSource filteredArrayUsingPredicate:pred];
    }
    [self.tableView reloadData];
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;通过监听搜索框文字内容的改变, 然后使用谓词过滤数据源, 重新刷新&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView&lt;/code&gt;即可&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;最后&quot;&gt;最后&lt;/h2&gt;
&lt;p&gt;这博客太没技术含量了, 水平太低, 写不出高深的东西, 我也很无奈啊, 哈哈哈哈哈哈哈&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-a10f79ca99b08f67.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图片来源于网络, 如果侵犯了您的权利, 请联系我删除&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">项目维护«地图相关总结»</title><link href="http://localhost:4000/jekyll/update/2017/06/13/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E5%9C%B0%E5%9B%BE%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93.html" rel="alternate" type="text/html" title="项目维护&lt;&lt;地图相关总结&gt;&gt;" /><published>2017-06-13T10:17:31+08:00</published><updated>2017-06-13T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/06/13/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4%3C%3C%E5%9C%B0%E5%9B%BE%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93%3E%3E</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/06/13/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E5%9C%B0%E5%9B%BE%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-e74be5476a2457b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;来自项目截图-点聚合&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;一-问题-地图标注点位置不准确&quot;&gt;一. 问题: 地图标注点位置不准确&lt;/h2&gt;
&lt;h3 id=&quot;知识背景&quot;&gt;知识背景&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1.WGS－84原始坐标系，一般用国际GPS纪录仪记录下来的经纬度，通过GPS定位拿到的原始经纬度，Google和高德地图定位的的经纬度（国外）都是基于WGS－84坐标系的；但是在国内是不允许直接用WGS84坐标系标注的，必须经过加密后才能使用；
2.GCJ－02坐标系，又名“火星坐标系”，是我国国测局独创的坐标体系，由WGS－84加密而成，在国内，必须至少使用GCJ－02坐标系，或者使用在GCJ－02加密后再进行加密的坐标系，如百度坐标系。高德和Google在国内都是使用GCJ－02坐标系，可以说，GCJ－02是国内最广泛使用的坐标系；
3.百度坐标系:bd-09，百度坐标系是在GCJ－02坐标系的基础上再次加密偏移后形成的坐标系，只适用于百度地图。(目前百度API提供了从其它坐标系转换为百度坐标系的API，但却没有从百度坐标系转为其他坐标系的API)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;以上知识点来自&lt;a href=&quot;http://blog.csdn.net/a13570320979/article/details/51366355&quot;&gt;高德，百度，Google地图定位偏移以及坐标系转换&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;分析原因&quot;&gt;分析原因&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;我们项目中使用的是高德地图.创建电站时, 会把获取到的高德经纬度调用后台接口转换成GPS经纬度, 然后把高德经纬度和GPS经纬度都给后台, 后台会再把GPS转成经纬度覆盖传入的经纬度(我们的后台设计是不是很神奇😂😂, 懒得吐槽了).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;经过以上的过程, 在地图点聚合页面获取到的经纬度其实是真实的经纬度, 然而代码中却是直接当成高德坐标在地图上标注, 所以位置显示有偏差.&lt;/p&gt;

&lt;h3 id=&quot;解决方案&quot;&gt;解决方案&lt;/h3&gt;
&lt;p&gt;把GPS转换为高德经纬度, 在标注点.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
CLLocationCoordinate2D amapcoord = AMapCoordinateConvert(CLLocationCoordinate2DMake([mapPsModel.latitude doubleValue], [mapPsModel.longitude doubleValue]), AMapCoordinateTypeGPS);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id=&quot;二-地图poi搜索&quot;&gt;二. 地图POI搜索&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;注: 在未设置城市限制时, 高德POI搜索仅会返回建议城市, 需要引导用户选择某一城市后,继续搜索.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://lbs.amap.com/api/ios-sdk/guide/map-data/poi&quot;&gt;高德官方sdk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-8b0b2a66c87d8226.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;建议城市&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-72e0ac18b3a073dc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;兴趣点&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-30ca0462abbc018b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;标注点&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;三-导航功能&quot;&gt;三. 导航功能&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;跳转到高德地图和苹果自带地图, 目标位置是准确的; 但是跳转到百度地图, 目标位置发生偏移.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;分析原因-1&quot;&gt;分析原因&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;国际经纬度坐标标准为WGS-84,国内必须至少使用国测局制定的GCJ-02,对地理位置进行首次加密。百度坐标在此基础上，进行了BD-09二次加密措施,更加保护了个人隐私。
因此从高德地图进入百度地图导航, 需要制定经纬度类型&lt;code class=&quot;highlighter-rouge&quot;&gt;coord_type=gcj02&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;解决方案-1&quot;&gt;解决方案&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;需要手动点击开始导航&lt;code class=&quot;highlighter-rouge&quot;&gt;@&quot;baidumap://map/direction?origin=&amp;amp;destination=latlng:%f,%f|name=目的地&amp;amp;mode=driving&amp;amp;coord_type=gcj02&quot;&lt;/code&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NSString *urlString = [[NSString stringWithFormat:@&quot;baidumap://map/direction?origin=&amp;amp;destination=latlng:%f,%f|name=目的地&amp;amp;mode=driving&amp;amp;coord_type=gcj02&quot;,locationBaidu.coordinate.latitude, locationBaidu.coordinate.longitude] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]; 
[[UIApplication sharedApplication] openURL:[NSURL URLWithString:urlString]];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;直接导航 &lt;code class=&quot;highlighter-rouge&quot;&gt;@&quot;baidumap://map/navi?location=%f, %f&amp;amp;src=push&amp;amp;type=BLK&amp;amp;src=webapp.line.isolarcloud.operation4ios&amp;amp;coord_type=gcj02&quot;&lt;/code&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NSString *urlString = [[NSString stringWithFormat:@&quot;baidumap://map/navi?location=%f, %f&amp;amp;src=push&amp;amp;type=BLK&amp;amp;src=webapp.line.isolarcloud.operation4ios&amp;amp;coord_type=gcj02&quot;, locationBaidu.coordinate.latitude, locationBaidu.coordinate.longitude] stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
[[UIApplication sharedApplication] openURL:[NSURL URLWithString:urlString]];
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果不指定类型, 也可以手动转换坐标点, 请参考&lt;a href=&quot;https://blog.woodbunny.com/post-68.html&quot;&gt;火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换算法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;强烈推荐同事(地图方面的大神)的一篇博客,介绍的非常详细 &lt;a href=&quot;http://www.chengyong.net/tool-used/map-difference-at-home-and-abroad.html&quot;&gt;[国内外地图差异分析](http://www.chengyong.net/tool-used/map-difference-at-home-and-abroad.html)&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">项目维护«导航栏标题换行显示»</title><link href="http://localhost:4000/jekyll/update/2017/06/03/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%A0%87%E9%A2%98%E6%8D%A2%E8%A1%8C%E6%98%BE%E7%A4%BA.html" rel="alternate" type="text/html" title="项目维护&lt;&lt;导航栏标题换行显示&gt;&gt;" /><published>2017-06-03T10:17:31+08:00</published><updated>2017-06-03T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/06/03/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4%3C%3C%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%A0%87%E9%A2%98%E6%8D%A2%E8%A1%8C%E6%98%BE%E7%A4%BA%3E%3E</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/06/03/%E9%A1%B9%E7%9B%AE%E7%BB%B4%E6%8A%A4-%E5%AF%BC%E8%88%AA%E6%A0%8F%E6%A0%87%E9%A2%98%E6%8D%A2%E8%A1%8C%E6%98%BE%E7%A4%BA.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-9aa412fdf2013211.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;在正文之前, 先允许我吐槽一下这段时间的工作. 五月份开始, 我们的项目进入V2版本, 进行TR4测试; 经过测试部的测试, 暴露了我们开发过程中的很多问题, 改bug改到晕厥😂😂😂——-不好意思, 有点浮夸了…………
由于开发之前,没有详尽的需求文档和设计, 导致了很多问题在测试阶段才暴露出来, 这样就严重影响工作计划的进度. 对于开发来说, 需求一遍遍改, 代码也要一遍遍改, 请允许我爆粗口 我日你个象拔蚌, 能不能不要轻易的改需求😭, 气到吐血&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-a242874a40e586c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;图片来源于网络&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;吐槽完了, 工作还是要继续的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;问题&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;导航栏标题太长, 一行显示不全, 测试建议导航栏标题可以两行显示, 两行显示不全, 可以缩放字体.&lt;/p&gt;

&lt;h2 id=&quot;分析&quot;&gt;分析&lt;/h2&gt;
&lt;p&gt;由于项目已经开发很久了, 每个页面都自定义&lt;code class=&quot;highlighter-rouge&quot;&gt;navigationItem.titleView&lt;/code&gt;,  这个工作量, 想想就不想干😂
控制器中设置导航栏标题分为两种方式:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self.navigationItem.title&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;self.title&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;ps: &lt;code class=&quot;highlighter-rouge&quot;&gt;self.title&lt;/code&gt; 相当于同时设置了&lt;code class=&quot;highlighter-rouge&quot;&gt;self.navigationItem.title&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;self.tabBarItem.title&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;解决&quot;&gt;解决&lt;/h2&gt;
&lt;p&gt;经过上面的分析, 想到可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;UINavigationItem&lt;/code&gt;类目, 重写系统的&lt;code class=&quot;highlighter-rouge&quot;&gt;setTitle:&lt;/code&gt;方法, 在&lt;code class=&quot;highlighter-rouge&quot;&gt;setTitle:&lt;/code&gt;方法中定义&lt;code class=&quot;highlighter-rouge&quot;&gt;titleView&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#import &quot;UINavigationItem+Title.h&quot;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UINavigationItem&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/**
 覆盖系统的设置导航栏标题方法，自定义title为两行显示

 @param title 标题
 */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UILabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UILabel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UILabel&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CGRectMake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCREEN_WIDTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIColor&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;clearColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;font&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIFont&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;boldSystemFontOfSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numberOfLines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIColor&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;whiteColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;adjustsFontSizeToFitWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;textAlignment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NSTextAlignmentCenter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sizeToFit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;titleView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;由于&lt;code class=&quot;highlighter-rouge&quot;&gt;self.title&lt;/code&gt;方法设置导航栏的标题, 不走该方法, 因此需要在&lt;code class=&quot;highlighter-rouge&quot;&gt;BaseViewController&lt;/code&gt;重写&lt;code class=&quot;highlighter-rouge&quot;&gt;setTitle:&lt;/code&gt;, 然后调用&lt;code class=&quot;highlighter-rouge&quot;&gt;self.navigationItem.title&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- (void)setTitle:(NSString *)title {
    [super setTitle:title];
    self.navigationItem.title = title;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;总结&quot;&gt;总结&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;励志以最少的代码解决看起来比较复杂问题&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">在正文之前, 先允许我吐槽一下这段时间的工作. 五月份开始, 我们的项目进入V2版本, 进行TR4测试; 经过测试部的测试, 暴露了我们开发过程中的很多问题, 改bug改到晕厥😂😂😂——-不好意思, 有点浮夸了………… 由于开发之前,没有详尽的需求文档和设计, 导致了很多问题在测试阶段才暴露出来, 这样就严重影响工作计划的进度. 对于开发来说, 需求一遍遍改, 代码也要一遍遍改, 请允许我爆粗口 我日你个象拔蚌, 能不能不要轻易的改需求😭, 气到吐血</summary></entry><entry><title type="html">iOS YQAlert 弹出框 – 个人库</title><link href="http://localhost:4000/jekyll/update/2017/04/28/iOS-YQAlert-%E5%BC%B9%E5%87%BA%E6%A1%86-%E4%B8%AA%E4%BA%BA%E5%BA%93.html" rel="alternate" type="text/html" title="iOS YQAlert 弹出框 -- 个人库" /><published>2017-04-28T10:17:31+08:00</published><updated>2017-04-28T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/04/28/iOS%20YQAlert%20%E5%BC%B9%E5%87%BA%E6%A1%86%20--%20%E4%B8%AA%E4%BA%BA%E5%BA%93</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/28/iOS-YQAlert-%E5%BC%B9%E5%87%BA%E6%A1%86-%E4%B8%AA%E4%BA%BA%E5%BA%93.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-dd4e9342eab529ed.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;最近使用swift 撸了一个弹出框, 可以高度自定义弹出框的内容, 样式和动画效果, 且可以使用&lt;a href=&quot;http://www.jianshu.com/p/95df9f07b5f2&quot;&gt;同步弹出框&lt;/a&gt;, 支持&lt;code class=&quot;highlighter-rouge&quot;&gt;cocoapods&lt;/code&gt;引入&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;yqalert&quot;&gt;YQAlert&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/YQqiang/YQAlert&quot;&gt;YQAlert git地址&lt;/a&gt;, &lt;strong&gt;&lt;em&gt;支持cocoapods&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;弹出框结构&quot;&gt;弹出框结构&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-f394241fd22a1cd1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;alertStructure.png&quot; /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;标注&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;①&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;自定义头部视图&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;②&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;标题和内容描述&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;③&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;自定义内容视图&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;④&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;操作按钮部分&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;本项目是使用 Swift 封装的弹出框。布局方式使用Auto Layout (VFL), 不依赖任何第三方布局框架, 方便快速集成&lt;/p&gt;

&lt;h2 id=&quot;功能&quot;&gt;功能&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;支持统一定义项目中弹出框样式, 包括控件之间的间距, 控件的外观及标题和内容的属性设置&lt;/li&gt;
  &lt;li&gt;支持完全自定义标题上方的头部视图&lt;/li&gt;
  &lt;li&gt;支持完全自定义内容文字下方的内容视图&lt;/li&gt;
  &lt;li&gt;支持按钮的水平排列或者垂直排列&lt;/li&gt;
  &lt;li&gt;可以设置为&lt;a href=&quot;http://www.jianshu.com/p/95df9f07b5f2&quot;&gt;同步弹出框&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;可以对操作按钮进行插入/删除/添加等操作&lt;/li&gt;
  &lt;li&gt;支持自定义弹出框的显示和消失的动画及动画执行时长&lt;/li&gt;
  &lt;li&gt;可设置背景虚化(毛玻璃效果)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;要求&quot;&gt;要求&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;iOS 9.0 +&lt;/li&gt;
  &lt;li&gt;Xcode 8.3&lt;/li&gt;
  &lt;li&gt;Swift 3.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;安装&quot;&gt;安装&lt;/h2&gt;
&lt;h3 id=&quot;cocoapods&quot;&gt;CocoaPods&lt;/h3&gt;

&lt;h4 id=&quot;swift3&quot;&gt;Swift3&lt;/h4&gt;
&lt;p&gt;确保使用最新版本cocoapods &lt;strong&gt;CocoaPods 1.2.1&lt;/strong&gt;, 可以使用命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo gem install cocoapods --pre&lt;/code&gt; 来升级.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ProjectName'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;use_frameworks!&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'YQAlert'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;/h3&gt;
&lt;p&gt;请下载Demo直接运行&lt;/p&gt;

&lt;h3 id=&quot;demo-预览&quot;&gt;Demo 预览&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/YQqiang/YQAlert/blob/master/YQAlertDemo.gif?raw=true&quot; alt=&quot;YQAlertDemo.gif&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;代码详解&quot;&gt;代码详解&lt;/h2&gt;
&lt;h3 id=&quot;全局配置&quot;&gt;全局配置&lt;/h3&gt;
&lt;h4 id=&quot;使用yqalertconf配置整个项目中弹出框的样式&quot;&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;YQAlertConf&lt;/code&gt;配置整个项目中弹出框的样式&lt;/h4&gt;
&lt;h5 id=&quot;配置弹出框样式&quot;&gt;配置弹出框样式&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 配置弹出框样式&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 弹出框的背景颜色&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;backgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 弹出框的圆角&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cornerRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 遮挡屏幕视图的背景颜色&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dimBackgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 控件之间垂直间距&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;verticalMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 水平距父视图的间距(不包含按钮之间水平间距)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;horizontalMargin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 弹出框距左边屏幕的间距&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertToLeftScreenMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 弹出框距右边屏幕的间距&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertToRightScreenMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
    
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;配置标题样式&quot;&gt;配置标题样式&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 配置标题样式&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// 标题字体&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;titleFont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIFont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;boldSystemFont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ofSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 标题颜色&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;titleColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 标题的对齐方式&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;titleAlignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSTextAlignment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 标题的行数&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;titleNumberOfLines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;配置内容文字样式&quot;&gt;配置内容文字样式&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 配置内容文字样式&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// 内容文字字体&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detailFont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIFont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;systemFont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ofSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 内容文字颜色&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detailColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lightGray&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 内容文字的对齐方式&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detailAlignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSTextAlignment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 内容文字的行数&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detailNumberOfLines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;操作按钮的样式配置&lt;/p&gt;
&lt;h5 id=&quot;普通按钮&quot;&gt;普通按钮&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 普通按钮&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonBorderWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonBorderColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonBackgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3399fe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonTitleFont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIFont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;systemFont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ofSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonTitleColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;取消按钮&quot;&gt;取消按钮&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 取消按钮 cancel&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelButtonBorderWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelButtonBorderColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelButtonBackgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3399fe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelButtonTitleFont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIFont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;systemFont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ofSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelButtonTitleColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;警示按钮&quot;&gt;警示按钮&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// MARK:- 警示按钮 destructive&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;destructiveButtonBorderWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;destructiveButtonBorderColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;destructiveButtonBackgroundColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;destructiveButtonTitleFont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIFont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;systemFont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ofSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;destructiveButtonTitleColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;特有样式配置-可以为每个弹出框设置的属性&quot;&gt;特有样式配置, 可以为每个弹出框设置的属性&lt;/h4&gt;
&lt;h5 id=&quot;外观样式相关属性配置&quot;&gt;外观样式相关属性配置&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;c1&quot;&gt;/// 操作按钮水平排列:点击背景, 默认弹出框 `不消失`; 操作按钮垂直排列: 点击背景, 默认弹出框 `消失`&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isTapBackgroundToDismiss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 是否执行同步弹出框: 默认不执行;  同步弹出框的说明&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isSyncAlert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 点击操作按钮之后, 弹出框是否消失? 默认消失.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;isClickAlertButtonToDismiss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;/// 显示背景是否虚化处理; 默认不虚化&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;visualEffectEnable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;动画相关属性配置&quot;&gt;动画相关属性配置&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;/// 弹出框显示动画的执行时长&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;showAnimationDuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 弹出框消失动画的执行时长&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dismissAnimationDuration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.25&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 自定义弹出框显示动画&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;showAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animationDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;())?&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;/// 自定义弹出框消失动画&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;dismissAnimation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;animationDuration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;())?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h5 id=&quot;操作按钮间距配置&quot;&gt;操作按钮间距配置&lt;/h5&gt;
&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;/// 按钮距左边和右边的边距, 默认左右给为30;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;/// 按钮和按钮之间的间距; 默认值为8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertButtonToButtonMargin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;CGFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;基本用法&quot;&gt;基本用法&lt;/h3&gt;
&lt;h4 id=&quot;仅有标题和内容文字&quot;&gt;仅有标题和内容文字&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-864b1397dc826e6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;noneButton.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;内容文字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isTapBackgroundToDismiss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;创建一个按钮的弹出框-使用闭包获取到按钮的点击回调-默认按钮标题为确认-也可以设置标题-默认按钮类型为普通类型normal-也可以设置按钮类型&quot;&gt;创建一个按钮的弹出框, 使用闭包获取到按钮的点击回调; 默认按钮标题为&lt;code class=&quot;highlighter-rouge&quot;&gt;确认&lt;/code&gt;, 也可以设置标题; 默认按钮类型为普通类型&lt;code class=&quot;highlighter-rouge&quot;&gt;normal&lt;/code&gt;, 也可以设置按钮类型&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-9f56a8f1587e12fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;oneButton.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;内容文字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;创建两个按钮的弹出框-使用闭包获取到按钮的点击回调-默认第一个按钮-标题为取消-按钮类型为cancel-默认第二个按钮的标题为确认-按钮类型为normal-通过闭包获取到每个按钮的点击事件-并且默认值也支持自定义&quot;&gt;创建两个按钮的弹出框, 使用闭包获取到按钮的点击回调, 默认第一个按钮, 标题为&lt;code class=&quot;highlighter-rouge&quot;&gt;取消&lt;/code&gt;, 按钮类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;cancel&lt;/code&gt;; 默认第二个按钮的标题为&lt;code class=&quot;highlighter-rouge&quot;&gt;确认&lt;/code&gt;, 按钮类型为&lt;code class=&quot;highlighter-rouge&quot;&gt;normal&lt;/code&gt;; 通过闭包获取到每个按钮的点击事件, 并且默认值也支持自定义&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-477be019a570b2da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;twoButton.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;详细内容&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;cancelHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;操作按钮的增加-删除-和-插入&quot;&gt;操作按钮的增加, 删除 和 插入&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-6be950c91d86e776.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;operationButton.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;内容文字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;添加按钮1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;添加按钮2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;button3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;添加按钮3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cancel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;appendAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;insertAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;appendAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;removeAlertButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;自定义用法-ps-自定义的视图请使用-auto-layout-布局&quot;&gt;自定义用法 (ps: 自定义的视图请使用 Auto Layout 布局)&lt;/h3&gt;
&lt;h4 id=&quot;自定义头视图&quot;&gt;自定义头视图&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-7d391959a07e01ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;customHead.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;内容文字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;customHeadView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;checkImageV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImageView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imageLiteral&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;resourceName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isUserInteractionEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addGestureRecognizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UITapGestureRecognizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;#selector(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clickButton&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;topHeadC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;checkImageVRightC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addConstraints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topHeadC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkImageVRightC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertImageV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImageView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;imageLiteral&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;resourceName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;alert&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertImageV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertImageVTopC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alertImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertImageVBottomC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alertImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertImageVCenterX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centerX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alertImageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centerX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addConstraints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alertImageVTopC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alertImageVBottomC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alertImageVCenterX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;headView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customHeadView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h4 id=&quot;自定义内容视图&quot;&gt;自定义内容视图&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-e7efef55dcfe2498.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/320&quot; alt=&quot;customContent.png&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;alertV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;YQAlertNormalView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;标题&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;detail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;内容文字&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;describing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;titleLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;customContentView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;imageV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImageView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;named&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;test2.jpg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;translatesAutoresizingMaskIntoConstraints&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;topC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bottomC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;leftC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;rightC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NSLayoutConstraint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;relatedBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;toItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;imageV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;multiplier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addConstraints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;topC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bottomC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leftC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rightC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;buttonViewToLeftAndRightMargin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;8.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;alertV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;联系我&quot;&gt;联系我：&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;博客: http://www.jianshu.com/u/b34eb8288906&lt;/li&gt;
  &lt;li&gt;邮箱: yq1054572107@gmail.com&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;贡献者&quot;&gt;贡献者&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/YQqiang&quot;&gt;YQqiang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;欢迎提交 issue 和 PR，大门永远向所有人敞开。&lt;/p&gt;

&lt;h2 id=&quot;license&quot;&gt;License&lt;/h2&gt;
&lt;p&gt;YQAlert is available under the MIT license. See the LICENSE file for more info.&lt;/p&gt;

&lt;h2 id=&quot;git-地址&quot;&gt;Git 地址&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/YQqiang/YQAlert&quot;&gt;YQAlert&lt;/a&gt; &lt;strong&gt;&lt;em&gt;支持cocoapods&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Nunchakus – 个人APP</title><link href="http://localhost:4000/jekyll/update/2017/04/19/Nunchakus-%E4%B8%AA%E4%BA%BAAPP.html" rel="alternate" type="text/html" title="Nunchakus -- 个人APP" /><published>2017-04-19T10:17:31+08:00</published><updated>2017-04-19T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/04/19/Nunchakus%20--%20%E4%B8%AA%E4%BA%BAAPP</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/19/Nunchakus-%E4%B8%AA%E4%BA%BAAPP.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-e1bc33c34e201e2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近利用业余时间, 写了一个非常简陋的APP(Nunchakus): 该APP只有一个功能, 那就是视屏播放, 虽然功能就一个, 但是开发中坑却不少, 所以在此做下总结.&lt;/p&gt;

&lt;h1 id=&quot;nunchakus-预览及简介&quot;&gt;Nunchakus 预览及简介&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-62c5d1bbc283b0b7.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;Nunchakus&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nunchakus 是一款专门播放双节棍视频的APP, Nunchakus中所有的视屏资源均来自&lt;a href=&quot;http://www.sjg8.com&quot;&gt;双节棍吧&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;技术实现&quot;&gt;技术实现&lt;/h1&gt;
&lt;h3 id=&quot;网络层的代码实现&quot;&gt;网络层的代码实现&lt;/h3&gt;
&lt;p&gt;观察网站的视屏结构可以清楚整理出网页的路径&lt;code class=&quot;highlighter-rouge&quot;&gt;http://www.sjg8.com/###/xxx&lt;/code&gt;
其中&lt;code class=&quot;highlighter-rouge&quot;&gt;###&lt;/code&gt;代表的视频的类型, &lt;code class=&quot;highlighter-rouge&quot;&gt;xxx&lt;/code&gt;代表页数.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;enum VideoType {
    case zipai      // 棍友自拍
    case biaoyan    // 舞台表演
    case jiaoxue    // 棍法教学
    case media      // 媒体关注
    case movie      // 影视动画
    case guowai     // 国外聚焦
    case paoku      // 极限跑酷
    case v          // 播放视屏
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;整理好网站结构可以很容易地使用&lt;code class=&quot;highlighter-rouge&quot;&gt;moya&lt;/code&gt;写出网络请求&lt;code class=&quot;highlighter-rouge&quot;&gt;Service&lt;/code&gt;, 不太会使用&lt;code class=&quot;highlighter-rouge&quot;&gt;moya&lt;/code&gt;的同学可以参考我的这篇文章&lt;a href=&quot;http://www.jianshu.com/p/2e0dfba02ae5&quot;&gt;RxSwift + Moya + ObjectMapper + MVVM 的网络请求&lt;/a&gt;
首页虽然有七大类(&lt;code class=&quot;highlighter-rouge&quot;&gt;v&lt;/code&gt;是用来播放视频的不作为视频类型, 但是&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;路径类似, 所以写在同一个枚举里面), 但是我们只需要实现某一类型的视频播放, 然后设置不同的类型即可.&lt;/p&gt;

&lt;h3 id=&quot;解析html&quot;&gt;解析HTML&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;的解析使用到了第三方库&lt;a href=&quot;https://github.com/tid-kijyun/Kanna&quot;&gt;Kanna&lt;/a&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;XPath&lt;/code&gt;语法:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;表达式&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;描述&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nodename&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;选取此节点的所有子节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;从根节点选取&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;//&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;选取当前节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;..&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;选取当前节点的父节点&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;@&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;选取属性&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;XPath&lt;/code&gt;更多其他用法, 可以去&lt;a href=&quot;http://www.w3school.com.cn/xpath/xpath_syntax.asp&quot;&gt;w3school&lt;/a&gt;查看
至此, 可以完成解析&lt;code class=&quot;highlighter-rouge&quot;&gt;html&lt;/code&gt;并转成&lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;的步骤, 接下来的开发就和常规开发模式相同了, 在次不再赘述.&lt;/p&gt;

&lt;p&gt;以下是填坑部分&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;填坑&quot;&gt;填坑&lt;/h1&gt;
&lt;h3 id=&quot;坑1----获取到优酷视频的vid-如何解析出真实的视频播放地址&quot;&gt;坑1 -  获取到优酷视频的VID, 如何解析出真实的视频播放地址&lt;/h3&gt;
&lt;p&gt;使用以下&lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;代码,可以解析优酷视频地址:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console.log(&quot;request&quot;)

var requestURL = function(window, encodeid){
    window.BuildVideoInfo = {
        encodeid:encodeid,
        _type:&quot;m3u8&quot;,
        _url:&quot;http://play.youku.com/play/get.json?vid=&quot; + encodeid + &quot;&amp;amp;ct=12&amp;amp;callback=BuildVideoInfo.response&quot;,
        _vid:encodeid,
    };
    BuildVideoInfo.response = function(a) {
        this.init(a);
    };
    BuildVideoInfo.m3u8src = function(a) {
        return YK.password = this._password, YK.m3u8src_v2(this.encodeid, a)
    };
    BuildVideoInfo.init = function(a) {
        console.log(a);
        this._v = a;
        var b = a.data, c = b.stream;
        if (this.encodeid = b.video.encodeid, !b.security ||!b.security.encrypt_string ||!b.security.ip)
//            location.href = &quot;yuqiang://encodeidfailed&quot;
            return YKP.sendErrorReport(2004), void YKP.showError(null, &quot;数据解析错误&quot;);
        if (!c&amp;amp;&amp;amp;!b.error)
//            location.href = &quot;yuqiang://encodeidfailed&quot;
            return void YKP.showError(null, &quot;该视频暂不能播放&quot;);
        var d = [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26], e = rc4(translate(YK.mk.a3 + &quot;o0b&quot; + YKP.userCache.a1, d).toString(), decode64(b.security.encrypt_string)), f = e.split(&quot;_&quot;);
        YKP.userCache.sid = e.split(&quot;_&quot;)[0];
        YKP.userCache.token = e.split(&quot;_&quot;)[1];
        YK.v = a;
        var url = YK.m3u8src_v2(BuildVideoInfo.encodeid,&quot;mp4&quot;);
        $(&quot;#media&quot;).attr(&quot;src&quot;,url);
        location.href = url
//        alert(requestCallback)
//        alert(requestCallback.callback)
//        alert(url);
        requestCallback.callback(url)
    };
    
    var YK = {}, YKU = {}, YKP = {
        playerType: &quot;&quot;,
        userCache: {
            a1: &quot;4&quot;,
            a2: &quot;1&quot;
        },
        playerState: {
            PLAYER_STATE_INIT: &quot;PLAYER_STATE_INIT&quot;,
            PLAYER_STATE_READY: &quot;PLAYER_STATE_READY&quot;,
            PLAYER_STATE_AD: &quot;PLAYER_STATE_AD&quot;,
            PLAYER_STATE_PLAYING: &quot;PLAYER_STATE_PLAYING&quot;,
            PLAYER_STATE_END: &quot;PLAYER_STATE_END&quot;,
            PLAYER_STATE_ERROR: &quot;PLAYER_STATE_ERROR&quot;
        },
        playerCurrentState: &quot;PLAYER_STATE_INIT&quot;
    };
    YK.m3u8src = function(a, b) {
        var c = &quot;http://v.youku.com/player/getM3U8/vid/&quot; + a + &quot;/type/&quot; + b + &quot;/ts/&quot; + parseInt((new Date).getTime() / 1e3);
        return  (c += &quot;/useKeyFrame/0&quot;), c += &quot;/v.m3u8&quot;
    };
    YK.m3u8src_v2 = function(a, b) {
        var c = {
            vid: a,
            type: b,
            ts: parseInt((new Date).getTime() / 1e3),
            keyframe: YKP.isIPHONE ? 0: 1
        };
        YK.password &amp;amp;&amp;amp; (c.password = YK.password), YK.password &amp;amp;&amp;amp; YK.initConfig.client_id &amp;amp;&amp;amp; YK.config.partner_config &amp;amp;&amp;amp; 1 == YK.config.partner_config.status &amp;amp;&amp;amp; 1 == YK.config.partner_config.passless &amp;amp;&amp;amp; (c.client_id = YK.initConfig.client_id);
        var d = [19, 1, 4, 7, 30, 14, 28, 8, 24, 17, 6, 35, 34, 16, 9, 10, 13, 22, 32, 29, 31, 21, 18, 3, 2, 23, 25, 27, 11, 20, 5, 15, 12, 0, 33, 26], e = encodeURIComponent(encode64(rc4(translate(YK.mk.a4 + &quot;poz&quot; + YKP.userCache.a2, d).toString(), YKP.userCache.sid + &quot;_&quot; + a + &quot;_&quot; + YKP.userCache.token)));
        c.ep = e, c.sid = YKP.userCache.sid, c.token = YKP.userCache.token, c.ctype = &quot;12&quot;, c.ev = &quot;1&quot;, c.oip = YK.v.data.security.ip;
        var f = &quot;http://pl.youku.com/playlist/m3u8?&quot; + urlParameter(c);
        return f;
    };
    YK.mk = {}, YK.mk.a3 = &quot;b4et&quot;, void(YK.mk.a4 = &quot;boa4&quot;)
    function decode64(a) {
        if (!a)
            return &quot;&quot;;
        a = a.toString();
        var b, c, d, e, f, g, h, i = new Array( - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, - 1, 62, - 1, - 1, - 1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, - 1, - 1, - 1, - 1, - 1, - 1, - 1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, - 1, - 1, - 1, - 1, - 1, - 1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, - 1, - 1, - 1, - 1, - 1);
        for (g = a.length, f = 0, h = &quot;&quot;; g &amp;gt; f;) {
            do
                b = i[255 &amp;amp; a.charCodeAt(f++)];
            while (g &amp;gt; f&amp;amp;&amp;amp;-1 == b);
            if ( - 1 == b)
                break;
            do
                c = i[255 &amp;amp; a.charCodeAt(f++)];
            while (g &amp;gt; f&amp;amp;&amp;amp;-1 == c);
            if ( - 1 == c)
                break;
            h += String.fromCharCode(b&amp;lt;&amp;lt;2 | (48 &amp;amp; c)&amp;gt;&amp;gt;4);
            do {
                if (d = 255 &amp;amp; a.charCodeAt(f++), 61 == d)
                    return h;
                d = i[d]
            }
            while (g &amp;gt; f&amp;amp;&amp;amp;-1 == d);
            if ( - 1 == d)
                break;
            h += String.fromCharCode((15 &amp;amp; c)&amp;lt;&amp;lt;4 | (60 &amp;amp; d)&amp;gt;&amp;gt;2);
            do {
                if (e = 255 &amp;amp; a.charCodeAt(f++), 61 == e)
                    return h;
                e = i[e]
            }
            while (g &amp;gt; f&amp;amp;&amp;amp;-1 == e);
            if ( - 1 == e)
                break;
            h += String.fromCharCode((3 &amp;amp; d)&amp;lt;&amp;lt;6 | e)
        }
        return h
    }
    function rc4(a, b) {
        for (var c, d = [], e = 0, f = &quot;&quot;, g = 0; 256 &amp;gt; g; g++)
            d[g] = g;
        for (g = 0; 256 &amp;gt; g; g++)
            e = (e + d[g] + a.charCodeAt(g%a.length))%256, c = d[g], d[g] = d[e], d[e] = c;
        g = 0, e = 0;
        for (var h = 0; h &amp;lt; b.length; h++)
            g = (g + 1)%256, e = (e + d[g])%256, c = d[g], d[g] = d[e], d[e] = c, f += String.fromCharCode(b.charCodeAt(h)^d[(d[g] + d[e])%256]);
        return f
    }
    function translate(a, b) {
        for (var c = [], d = 0; d &amp;lt; a.length; d++) {
            var e = 0;
            e = a[d] &amp;gt;= &quot;a&quot; &amp;amp;&amp;amp; a[d] &amp;lt;= &quot;z&quot; ? a[d].charCodeAt(0) - &quot;a&quot;.charCodeAt(0) : a[d] - &quot;0&quot; + 26;
            for (var f = 0; 36 &amp;gt; f; f++)
                if (b[f] == e) {
                    e = f;
                    break
                }
            e &amp;gt; 25 ? c[d] = e - 26 : c[d] = String.fromCharCode(e + 97)
        }
        return c.join(&quot;&quot;)
    }

    var encode64 = function(a) {
        if (!a)
            return &quot;&quot;;
        a = a.toString();
        var b, c, d, e, f, g, h = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;;
        for (d = a.length, c = 0, b = &quot;&quot;; d &amp;gt; c;) {
            if (e = 255 &amp;amp; a.charCodeAt(c++), c == d) {
                b += h.charAt(e&amp;gt;&amp;gt;2), b += h.charAt((3 &amp;amp; e)&amp;lt;&amp;lt;4), b += &quot;==&quot;;
                break
            }
            if (f = a.charCodeAt(c++), c == d) {
                b += h.charAt(e&amp;gt;&amp;gt;2), b += h.charAt((3 &amp;amp; e)&amp;lt;&amp;lt;4 | (240 &amp;amp; f)&amp;gt;&amp;gt;4), b += h.charAt((15 &amp;amp; f)&amp;lt;&amp;lt;2), b += &quot;=&quot;;
                break
            }
            g = a.charCodeAt(c++), b += h.charAt(e&amp;gt;&amp;gt;2), b += h.charAt((3 &amp;amp; e)&amp;lt;&amp;lt;4 | (240 &amp;amp; f)&amp;gt;&amp;gt;4), b += h.charAt((15 &amp;amp; f)&amp;lt;&amp;lt;2 | (192 &amp;amp; g)&amp;gt;&amp;gt;6), b += h.charAt(63 &amp;amp; g)
        }
        return b
    }
    var urlParameter = function(a) {
        var b = [];
        for (var c in a)
            b.push(c + &quot;=&quot; + a[c]);
        return b.join(&quot;&amp;amp;&quot;)
    }

    $.ajax(
        {
            type:'get',
            url : BuildVideoInfo._url,
            dataType : 'jsonp',
            jsonp:&quot;callback&quot;,
            success  : function(data) {
            },
            error : function(request, msg, e) {
            }
        }
    );
    return &quot;requestJS&quot;;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;坑2---如何调用这段-js-代码&quot;&gt;坑2 - 如何调用这段 js 代码&lt;/h3&gt;
&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;webView&lt;/code&gt;的&lt;code class=&quot;highlighter-rouge&quot;&gt;stringByEvaluatingJavaScript(from:)&lt;/code&gt; 调用, 并且传入解析出来的视频&lt;code class=&quot;highlighter-rouge&quot;&gt;v_id&lt;/code&gt;
注: js中传入的字符串参数需要使用单引号 &lt;code class=&quot;highlighter-rouge&quot;&gt;' '&lt;/code&gt; 括起来&lt;/p&gt;

&lt;h3 id=&quot;坑3---如何获取到-js-中解析出来的-url&quot;&gt;坑3 - 如何获取到 js 中解析出来的 url&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;中是异步解析&lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; , 不能立即返回结果.
解决办法: 在&lt;code class=&quot;highlighter-rouge&quot;&gt;js&lt;/code&gt;中获取到&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;后, 使用&lt;code class=&quot;highlighter-rouge&quot;&gt;location.href = url&lt;/code&gt;资源重定向, 然后在&lt;code class=&quot;highlighter-rouge&quot;&gt;webView&lt;/code&gt; 的代理方法&lt;code class=&quot;highlighter-rouge&quot;&gt;webView(_ webView: UIWebView, shouldStartLoadWith request: URLRequest, navigationType: UIWebViewNavigationType) -&amp;gt; Bool&lt;/code&gt;中根据自己定义的规则进行拦截, 最后将获取到的&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;回调出去.&lt;/p&gt;

&lt;h3 id=&quot;坑3---tableview上播放视屏-会出现复用问题&quot;&gt;坑3 - tableView上播放视屏, 会出现复用问题&lt;/h3&gt;
&lt;p&gt;说明: 项目中的视频播放使用了库&lt;a href=&quot;https://github.com/BrikerMan/BMPlayer&quot;&gt;BMPlayer&lt;/a&gt;, 感谢开源社区的贡献.
因为tableViewCell可以复用, 所以滑动后, 会有多个&lt;code class=&quot;highlighter-rouge&quot;&gt;cell&lt;/code&gt;同时播放视频
解决办法: 在&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView&lt;/code&gt;的代理方法&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {}&lt;/code&gt;中移除不复用&lt;code class=&quot;highlighter-rouge&quot;&gt;cell&lt;/code&gt;上的视频播放器&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {
        guard let videoCell = cell as? VideoCell else {
            return
        }
        let view = videoCell.bgView.subviews.last
        
        if currentIndexPath == indexPath {
            // 当前cell需要播放视屏
            if (view as? BMPlayer) == nil, player.avPlayer != nil {
                videoCell.bgView.addSubview(player)
                player.snp.remakeConstraints { (make) in
                    make.edges.equalTo(videoCell.imgV)
                }
            }
        } else {
            // 该cell为复用的cell, 需要移除播放器
            if let playerV = view as? BMPlayer {
                playerV.removeFromSuperview()
            }
        }
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;坑4---播放某一个视频后-滑动-tableview--正在播放视频的-cell-虽然已经不在屏幕上显示了-但是视频仍在继续播放&quot;&gt;坑4 - 播放某一个视频后, 滑动 tableView , 正在播放视频的 Cell 虽然已经不在屏幕上显示了, 但是视频仍在继续播放&lt;/h3&gt;
&lt;p&gt;解决办法: 在&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView&lt;/code&gt;的代理方法&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView(_ tableView: UITableView, willDisplay cell: UITableViewCell, forRowAt indexPath: IndexPath) {}&lt;/code&gt;中加入如下代码, 如果当前&lt;code class=&quot;highlighter-rouge&quot;&gt;Cell&lt;/code&gt; 不在显示, 则暂停播放&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       if let visibleIndexPath = tableView.indexPathsForVisibleRows,visibleIndexPath.contains(currentIndexPath) {
            if !player.isPlaying {
                player.play()
            }
        } else {
            player.pause()
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;坑5---tableview-的点击代理方法中-不能使用同步的弹出框&quot;&gt;坑5 - tableView 的点击代理方法中, 不能使用同步的弹出框&lt;/h3&gt;
&lt;p&gt;注: 弹出框的同步调用可以参考我的这篇文章&lt;a href=&quot;http://www.jianshu.com/p/95df9f07b5f2&quot;&gt;iOS同步调用对话框 RunLoop的使用&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;网络状态监控, 使用到了库&lt;a href=&quot;https://github.com/ashleymills/Reachability.swift&quot;&gt;ReachabilitySwift&lt;/a&gt;, 感谢开源社区的贡献.&lt;/p&gt;

&lt;p&gt;当用户点击播放视频时, 需要判断当前用户的网络状态. 如果使用的是&lt;code class=&quot;highlighter-rouge&quot;&gt;WiFi&lt;/code&gt;则可以播放视频; 如果使用的是移动网络, 则需要提示用用户”当前正在使用移动网络, 是否继续播放?”.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView&lt;/code&gt;的点击代理方中使用此方式, 对话框弹不出来, 并且界面处于阻塞状态, 退回桌面, 再次进入APP, 出现弹出框; 点击取消或确定, 同样不能结束对话框, 退回桌面, 再次进入APP, 对话框才消失.&lt;/p&gt;

&lt;p&gt;解决办法: 在&lt;code class=&quot;highlighter-rouge&quot;&gt;tableView&lt;/code&gt;的 &lt;code class=&quot;highlighter-rouge&quot;&gt;cell&lt;/code&gt;上加按钮, 通过点击按钮的回调使用同步对话框.&lt;/p&gt;

&lt;h3 id=&quot;坑6---视频的全屏播放&quot;&gt;坑6 - 视频的全屏播放&lt;/h3&gt;
&lt;p&gt;点击全屏播放视频, 需要模态出一个全屏播放的控制器.
在&lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;的主控制器中, 把所有页面的状态都设置为横屏&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        return UIInterfaceOrientationMask.portrait
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在模态出的全屏播放控制器, 旋转屏幕&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
        return [.landscapeRight, .landscapeLeft]
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;更多屏幕旋转的知识请参考&lt;a href=&quot;https://lvwenhan.com/ios/458.html&quot;&gt;如何用代码控制以不同屏幕方向打开新页面【iOS】&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;坑7---tableview-的头部下拉放大效果实现&quot;&gt;坑7 - tableView 的头部下拉放大效果实现&lt;/h3&gt;
&lt;p&gt;网上参考教程很多, 不再赘述&lt;/p&gt;

&lt;h1 id=&quot;总结&quot;&gt;总结&lt;/h1&gt;
&lt;p&gt;项目中还有很多bug, 及很多待优化的地方; &lt;code class=&quot;highlighter-rouge&quot;&gt;Nunchakus &lt;/code&gt;作为自己练手的一个小项目, 我会对它持续改进, 并添加一些其他的功能.另外希望各路大神可以提一些改进的意见或建议.&lt;/p&gt;

&lt;h1 id=&quot;还有就是项目git地址在这猛戳这里&quot;&gt;还有——就是项目git地址在这&lt;a href=&quot;https://github.com/YQqiang/Nunchakus&quot;&gt;猛戳这里&lt;/a&gt;&lt;/h1&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">git 日常使用小结</title><link href="http://localhost:4000/jekyll/update/2017/04/07/git-%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93.html" rel="alternate" type="text/html" title="git 日常使用小结" /><published>2017-04-07T10:17:31+08:00</published><updated>2017-04-07T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/04/07/git%20%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/04/07/git-%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-74d949e6c7fd8c79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-简介&quot;&gt;Git 简介&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;分布式控制系统
    &lt;ol&gt;
      &lt;li&gt;版本库本地化, 支持离线提交, 相对独立不影响协同开发.&lt;/li&gt;
      &lt;li&gt;更少的 “仓库污染”.&lt;/li&gt;
      &lt;li&gt;把内容按元数据方式存储, 完整克隆版本库.&lt;/li&gt;
      &lt;li&gt;支持快速切换分支方便合并, 比较合并性能好.&lt;/li&gt;
      &lt;li&gt;分布式版本库, 无单点故障, 内容完整性好.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;开发模式&quot;&gt;开发模式&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-69ee98a20b4137a2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;开发模式&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-基础命令&quot;&gt;Git 基础命令&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;git-配置&quot;&gt;git 配置&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; git config -l    # 查看当前配置
 git config --global user.name &quot;YQqiang&quot;    # 设置用户名
 git config --global user.email xxxx@gmail.com    # 设置邮箱
 git config --golbal alias.ci commit    # 设置git 命令的别名
 git config --golbal alias.co checkout    # 设置git 命令的别名
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ~/.gitconfig     # 全局配置文件
 .git    # 在库的顶级目录当中, 包含项目的所有对象, 提交记录, 配置
 .gitignore    # 记录要忽略的文件
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;获得-git-仓库&quot;&gt;获得 git 仓库&lt;/h3&gt;
    &lt;ol&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt;
        &lt;blockquote&gt;
          &lt;p&gt;初始化后, 在当前目录会出现一个名为&lt;code class=&quot;highlighter-rouge&quot;&gt;.git&lt;/code&gt;的目录. 所有&lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt;需要的数据和资源都存放在这个目录中.&lt;/p&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone&lt;/code&gt;
        &lt;blockquote&gt;
          &lt;ul&gt;
            &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone git@github.com:YQqiang/MoyaDemo.git&lt;/code&gt;
 获取社区代码, 但是需要有相关权限才能访问 (使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-keygen&lt;/code&gt; 生成 &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt;, 将&lt;code class=&quot;highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt; 添加到&lt;code class=&quot;highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt;)&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/blockquote&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/YQqiang/MoyaDemo.git&lt;/code&gt;
    获取&lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;中提供的第三方资源&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;提交文件&quot;&gt;提交文件&lt;/h3&gt;

    &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-f87840bb3b7548c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;提交文件&quot; /&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt; 查看文件状态&lt;/li&gt;
      &lt;li&gt;文件所处三种状态
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;working tree&lt;/code&gt;    对应.git/之外的项目文件或目录&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index tree&lt;/code&gt; (add 后)    对应.git/index&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; (commit 后)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; 相关意义
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; 代表最后一次提交&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD^&lt;/code&gt; 代表最后一次提交的父提交 等价于HEAD~1&amp;gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD~2&lt;/code&gt; 倒数第二次提交
 —&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt; 显示&lt;code class=&quot;highlighter-rouge&quot;&gt;working tree&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;index tree&lt;/code&gt; 之间的差异&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff --staged&lt;/code&gt; 用户来查看&lt;code class=&quot;highlighter-rouge&quot;&gt;index tree&lt;/code&gt; 中的内容 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;中的区别&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff HEAD &lt;/code&gt; 显示&lt;code class=&quot;highlighter-rouge&quot;&gt;working tree&lt;/code&gt; 与 &lt;code class=&quot;highlighter-rouge&quot;&gt;index tree&lt;/code&gt; 两者之和与&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;中的区别, 用来看总共的修改内容&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff file_name&lt;/code&gt; 或者 &lt;code class=&quot;highlighter-rouge&quot;&gt;git diff dir_name/&lt;/code&gt; 查看指定文件或目录的修改&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff one_commit_hash another_commit_hash&lt;/code&gt; 查看两次&lt;code class=&quot;highlighter-rouge&quot;&gt;commit&lt;/code&gt; 之间的差异&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff one_branch_name another_branch_name&lt;/code&gt; 对比两个分支之间的差异
 —&lt;/li&gt;
      &lt;li&gt;跟踪新文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add file_name&lt;/code&gt;  将本地指定文件名或目录(&lt;em&gt;新增 和 修改, 没有删除&lt;/em&gt;) 的文件添加到暂缓区&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt; 将本地所有的(&lt;em&gt;新增 和 修改, 没有删除&lt;/em&gt;) 的文件添加到暂缓区. 同样可以使用&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;来匹配&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add -u&lt;/code&gt; 将本地的(&lt;em&gt;修改 和 删除, 没有新增&lt;/em&gt;) 的文件添加到暂缓区&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add -A&lt;/code&gt; 将本地所有改动添加到暂缓区 (&lt;code class=&quot;highlighter-rouge&quot;&gt;git add -A  =  git add . + git add -u&lt;/code&gt;)
 —&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;comment&quot;&lt;/code&gt; 提交暂缓区中的内容(已经add) 并添加注释&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt; 把修改的文件添加到暂缓区(不包括新建(untracked)的文件), 然后提交&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -i&lt;/code&gt;  通常在文件冲突解决以后, 提交解决的冲突时使用.
 —&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch&lt;/code&gt; 从远程获取最新版本到本地, 不会自动&lt;code class=&quot;highlighter-rouge&quot;&gt;merge&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; 从远程获取最新版本到本地并&lt;code class=&quot;highlighter-rouge&quot;&gt;merge&lt;/code&gt;到本地, 相当于&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;git merge&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;在实际使用中, &lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch&lt;/code&gt; 更安全一些, 因为在&lt;code class=&quot;highlighter-rouge&quot;&gt;merge&lt;/code&gt;前我们可以查看更新情况, 然后再决定是否合并
 —&lt;/li&gt;
      &lt;li&gt;解决冲突
        &lt;ul&gt;
          &lt;li&gt;根据冲突提示, 逐个查找冲突文件中有冲突的地方进行手动解决&lt;/li&gt;
          &lt;li&gt;使用git冲突解决工具, 如: P4merge, kdiff3
 —&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin branch_name&lt;/code&gt; 将本地分支推送到&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;主机的某分支, 如果该分支不存在, 就新建该远程分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt; -u (upstream) 指定&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; 为默认主机, 后面就可以不加任何参数使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt; 了&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push --all origin&lt;/code&gt; 将所有本地分支都推送到&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;主机&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin :branch_name&lt;/code&gt; 删除远程分支(即推送一个空分支到主机)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin local:remote&lt;/code&gt; 完整格式&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;查看提交历史&quot;&gt;查看提交历史&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt; 查看提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log -n&lt;/code&gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;是一个正整数, 查看前n次修改&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log file1 file2&lt;/code&gt; 查看&lt;code class=&quot;highlighter-rouge&quot;&gt;file1&lt;/code&gt;文件, &lt;code class=&quot;highlighter-rouge&quot;&gt;file2&lt;/code&gt;文件的提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log file/&lt;/code&gt; 查看&lt;code class=&quot;highlighter-rouge&quot;&gt;file&lt;/code&gt;文件夹下所有文件的提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log v1&lt;/code&gt; 此时的&lt;code class=&quot;highlighter-rouge&quot;&gt;v1&lt;/code&gt; 代表的是分支的名字&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log -- v1&lt;/code&gt; 此时的&lt;code class=&quot;highlighter-rouge&quot;&gt;v1&lt;/code&gt; 代表的是名为&lt;code class=&quot;highlighter-rouge&quot;&gt;v1&lt;/code&gt;的文件&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --oneline&lt;/code&gt; 一行显示一条log&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log -p&lt;/code&gt; 查看详细修改内容&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --stat&lt;/code&gt; 查看提交统计信息&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log -graph&lt;/code&gt; 显示何时出现了分支和合并等信息&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log commit_id&lt;/code&gt; 查询&lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id&lt;/code&gt;之前的记录, 包括&lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log commit_id_1 commit_id_2&lt;/code&gt; 查询&lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id_1&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id_2&lt;/code&gt; 之间的记录, 包括&lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id_1&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id_2&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log commit_id_1..commit_id_2&lt;/code&gt; 同上, 但是不包括&lt;code class=&quot;highlighter-rouge&quot;&gt;commit_id_1&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log v1.0..&lt;/code&gt; 查询从&lt;code class=&quot;highlighter-rouge&quot;&gt;v1.0&lt;/code&gt; 之后的提交历史记录(不包含&lt;code class=&quot;highlighter-rouge&quot;&gt;v1.0&lt;/code&gt;)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log test..master&lt;/code&gt; 查询&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支中的提交记录但不包含&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;分支记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log master..test&lt;/code&gt; 查询&lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;分支中的提交记录但不包含&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log master...test&lt;/code&gt; 查询&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;或 &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt;分支中的提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log test --not master&lt;/code&gt; 屏蔽&lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt;分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --author='yuqiangsun'&lt;/code&gt; 查询指定作者的提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --grep='日期'&lt;/code&gt; 列出所有包含&lt;code class=&quot;highlighter-rouge&quot;&gt;日期&lt;/code&gt;字样的提交信息说明的提交记录&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --name-only&lt;/code&gt; 仅在提交信息后显示已修改的文件清单&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --pretty=oneline&lt;/code&gt; 单行显示每次的提交(commit_id 和 注释)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log --pretty=format:&quot;%H %an %ae %ad %s&quot;&lt;/code&gt;  格式化输出log&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;选项&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%H&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交对象（commit）的完整哈希字串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%T&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;树对象（tree）的完整哈希字串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%t&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;树对象的简短哈希字串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%P&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;父对象（parent）的完整哈希字串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%p&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;父对象的简短哈希字串&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%an&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;作者（author）的名字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%ae&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;作者的电子邮件地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%ad&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;作者修订日期(可以用 -date= 选项定制格式)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%ar&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;作者修订日期，按多久以前的方式显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%cn&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交者(committer)的名字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%ce&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交者的电子邮件地址&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%cd&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交日期&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%cr&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交日期，按多久以前的方式显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%s&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;提交说明&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;撤销操作&quot;&gt;撤销操作&lt;/h3&gt;

    &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-43a1c6121896f297.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Rebase&quot; /&gt;&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;a href=&quot;http://gitbook.liuhui998.com/4_2.html&quot;&gt;rebase 详解&lt;/a&gt;
 rebase 命令执行后, 实际上是将分支点从C移动了G, 这样分支也就具有了C到G的功能&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-93800dc23b5cb4d4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;reset&quot; /&gt;
    * &lt;code class=&quot;highlighter-rouge&quot;&gt;reset&lt;/code&gt; 将当前的工作目录完全回滚到指定的版本号
    * &lt;code class=&quot;highlighter-rouge&quot;&gt;revert&lt;/code&gt; 还原一个版本的修改, 必须提供一个具体git版本号
    * 区别
        * &lt;code class=&quot;highlighter-rouge&quot;&gt;reset&lt;/code&gt; 是指将当前head的内容重置, 不会留下任何痕迹
        * &lt;code class=&quot;highlighter-rouge&quot;&gt;revert&lt;/code&gt; 是撤销某次提交, 但是这次撤销也会作为一次提交进行保存&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;打标签&quot;&gt;打标签&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;查看tag
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -l&lt;/code&gt; 查看所有tag, -l 可以省略&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;创建tag
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag v1.2.4&lt;/code&gt; 基于最新提交创建标签&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -a v1.2.4 -m &quot;tag message&quot;&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -a v1.2.4 31dd771&lt;/code&gt; 补打tag, 前提是记得commit&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;分享tag
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin tag v1.2.4&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin --tags&lt;/code&gt; 提交所有tag到服务器&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;删除tag
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -d v1.2.4&lt;/code&gt;删除本地tag&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin :v1.2.4&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;分支管理&quot;&gt;分支管理&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;新建分支-本地&quot;&gt;新建分支 (本地)&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch new_branch&lt;/code&gt; 新建分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout branch_name&lt;/code&gt; 切换分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b new_branch&lt;/code&gt; 从当前分支新建分支(等同上面两条命令)&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b new_branch commit_id &lt;/code&gt; 从某次提交点上新建分支&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;新建分支-远程&quot;&gt;新建分支 (远程)&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin branch_name&lt;/code&gt; 将本地分支推送到&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;主机的某分支, 如果该分支不存在, 就新建该远程分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt; -u (upstream) 指定&lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; 为默认主机, 后面就可以不加任何参数使用&lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt; 了&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin local:remote&lt;/code&gt; 完整格式&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;查看分支&quot;&gt;查看分支&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -l&lt;/code&gt; 查看本地分支, -l 可以省略&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -r&lt;/code&gt; 查看远程分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -a&lt;/code&gt; 查看所有分支&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -v&lt;/code&gt; 查看各分支最后一次提交对象信息&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -vv&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;修改分支&quot;&gt;修改分支&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -m old_branch new_branch&lt;/code&gt; 本地分支重命名&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch --set-upstream-to=origin/&amp;lt;远程分支&amp;gt; &amp;lt;本地分支&amp;gt;&lt;/code&gt; 设置本地分支对应的远程分支, 或者需要更改, 在项目根目录下&lt;code class=&quot;highlighter-rouge&quot;&gt;.git/config&lt;/code&gt;, 直接修改&lt;code class=&quot;highlighter-rouge&quot;&gt;merge = refs/heads/&amp;lt;分支名称&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;合并分支&quot;&gt;合并分支&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git merge branch_name&lt;/code&gt; 将branch合并到当前分支&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;删除分支&quot;&gt;删除分支&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -d branch_name&lt;/code&gt; 删除分支, 分支中所有文件已提交, 是个干净的工作目录, 不能再该分支下执行该命令&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -D branch_name&lt;/code&gt; 强制删除分支, 不能在该分支下执行该命令&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin :branch_name&lt;/code&gt; 删除远程分支(即推送一个空分支到主机)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;贮藏工作进度&quot;&gt;贮藏工作进度&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git cherry-pick commit_id&lt;/code&gt; 用于把另一个本地分支的commit修改应用到当前分支&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash&lt;/code&gt; 保存当前的工作进度. 会分别对&lt;code class=&quot;highlighter-rouge&quot;&gt;working tree&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; 的状态进行保存&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash save &quot;message&quot; &lt;/code&gt; 指定保存信息&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash list&lt;/code&gt; 显示暂存列表&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash pop&lt;/code&gt; 恢复最新保存的工作进度, 并从贮藏表中删除&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash apply&lt;/code&gt; 回复最新保存的工作进度,  &lt;strong&gt;不&lt;/strong&gt; 从贮藏表中删除&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash ( pop | apply ) stash@{1}&lt;/code&gt; 恢复指定的贮藏&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git stash clear&lt;/code&gt; 清空贮藏表&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;使用技巧&quot;&gt;使用技巧&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;用另一分支source_branch的指定文件直接覆盖当前分支的相应文件&quot;&gt;用另一分支”source_branch”的指定文件直接覆盖当前分支的相应文件&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout B_branch
cd path/to/f.txt
git checkout A_bracn  f.txt
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;把当前修改的内容保存到暂缓区&quot;&gt;把当前修改的内容保存到暂缓区&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git stash save &quot;添加一些注释在这里
git stash list # 查看暂缓区中的内容列表     git stash pop stash@{1}  # 出栈
git stash apply stash@{1} # 应用
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;放弃对某一个文件的修改内容&quot;&gt;放弃对某一个文件的修改内容&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout file_name
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;放弃当前所有内容的修改&quot;&gt;放弃当前所有内容的修改&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git stash 
git stash drop
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;使用某个分支的文件替换某个分支的文件&quot;&gt;使用某个分支的文件替换某个分支的文件&lt;/h3&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git 使用branch_A分支的file1文件替换branch_B的file1文件
(branch_B) $ git checkout branch_A file1
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">BgImgTextView</title><link href="http://localhost:4000/jekyll/update/2017/03/20/BgImgTextView.html" rel="alternate" type="text/html" title="BgImgTextView" /><published>2017-03-20T10:17:31+08:00</published><updated>2017-03-20T10:17:31+08:00</updated><id>http://localhost:4000/jekyll/update/2017/03/20/BgImgTextView</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2017/03/20/BgImgTextView.html">&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-86506572fc2c26e6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;半个月没有更新博客了, 俗话说 &lt;strong&gt;&lt;em&gt;三天不学习赶不上刘少奇&lt;/em&gt;&lt;/strong&gt; ; 这半个月又不知被别人甩出去多远😂😂😂&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;说说正题吧~~~~&lt;/p&gt;

&lt;p&gt;在改项目中的bug时, 发现&lt;code class=&quot;highlighter-rouge&quot;&gt;TextView&lt;/code&gt;的内容不能设置滑动的内边距, 以致于给textView添加背景图片后, 内容滑动会超出背景图片; 项目中的&lt;code class=&quot;highlighter-rouge&quot;&gt;textView&lt;/code&gt; 的封装是继承自&lt;code class=&quot;highlighter-rouge&quot;&gt;UITextView&lt;/code&gt; , 改起来比较棘手&lt;del&gt;(是我不知道如何去改, 嘘…….)&lt;/del&gt;, 所以决定手撸一个.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ps: 有大神知道如何设置&lt;code class=&quot;highlighter-rouge&quot;&gt;textView&lt;/code&gt;滑动的内边距, 还望指教, 非常感谢.
本人菜鸟一枚, 才疏学浅, 望大神们多指教.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;bug演示&quot;&gt;bug演示&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-c9f9191fc4441220.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;bug&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bgimgtextview&quot;&gt;BgImgTextView&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;带有占位文字(&lt;code class=&quot;highlighter-rouge&quot;&gt;placeholder&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;可以添加背景图片(&lt;code class=&quot;highlighter-rouge&quot;&gt;bgImgName&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;bgImg&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;可以给内容设置内边距(&lt;code class=&quot;highlighter-rouge&quot;&gt;edgeInsets&lt;/code&gt;), 使其内容滑动时不超过背景图片&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;效果展示&quot;&gt;效果展示&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/3538284-3bed97a0cfc42175.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;BgImgTextView.gif&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;github地址&quot;&gt;github地址&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/YQqiang/BgImgTextView&quot;&gt;BgImgTextView&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>